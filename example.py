import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è Streamlit", layout="wide")
st.sidebar.title("–†–∞–∑–¥–µ–ª—ã")

# –°–ª–æ–≤–∞—Ä—å —Ä–∞–∑–¥–µ–ª–æ–≤
sections = {
    "–û–±—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ü–û": "1",
    "–£—Å—Ç–∞–Ω–æ–≤–∫–∞": "2",
    "–†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º": "3",
    "–¢–∞–±–ª–∏—Ü—ã": "4",
    "–ù–∞—É—á–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞": "5",
    "–≠–ª–µ–º–µ–Ω—Ç—ã –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞": "6",
    "–°–æ—Å—Ç–∞–≤–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏": "7",
    "–†–∞—Å—á–µ—Ç–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–º –≤–≤–æ–¥–æ–º": "8",
    "–ö–æ–º–ø–æ–Ω–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã": "9",
    "–ú–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç": "10",
}

# –í—ã–±–æ—Ä —Ä–∞–∑–¥–µ–ª–∞
choice = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", list(sections.keys()))

# –†–∞–∑–¥–µ–ª 1: –û–±—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ü–û
if choice == "–û–±—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ü–û":
    st.write("""
    Streamlit ‚Äî —ç—Ç–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º –¥–ª—è —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Python, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è. 
    
    ##### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
    + **–í–∏–¥–∂–µ—Ç—ã –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è.** –í Streamlit –µ—Å—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã –¥–ª—è —á–∞—Å—Ç—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä –ø–æ–ª–∑—É–Ω–∫–∏ –∏–ª–∏ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞. –ú–æ–∂–Ω–æ –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ –∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É, –≤—ã–≤–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –≤–∏–¥–µ —Å—Ö–µ–º—ã –∏–ª–∏ —Ç–∞–±–ª–∏—Ü—ã.
    + **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.** –ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–Ω—è–µ—Ç —á—Ç–æ-—Ç–æ –≤ –∫–æ–¥–µ, Streamlit —Å–∞–º –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –Ω—É–∂–Ω—ã–µ —á–∞—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
    + **–ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ.** –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –¥–µ—Å—è—Ç–∫–æ–≤ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞, –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ, –æ—Ç—Ä–∏—Å–æ–≤–∞–Ω–æ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç.
    + **–û—Ç–∫—Ä—ã—Ç—ã–π –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥.** –õ—é–±–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –º–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω —Ñ—Ä–µ–π–º–≤–æ—Ä–∫.
    + **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö.** Streamlit —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ç–∞–∫–∏–º–∏ –±–∞–∑–∞–º–∏, –∫–∞–∫ AWS S3, MS SQL Server, Oracle DB –∏ –¥—Ä—É–≥–∏–µ.
    """)
    st.write("")
    col1, col2, col3 = st.columns(3)
    with col1:
        file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª")
    with col2:
        number = st.slider("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä", 0, 100)
    with col3:
        color = st.color_picker("–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç")
        st.code("""
        import streamlit as st
        st.write('–ü—Ä–∏–≤–µ—Ç, Streamlit!')
        """, language="python")

# –†–∞–∑–¥–µ–ª 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞
elif choice == "–£—Å—Ç–∞–Ω–æ–≤–∫–∞":
    st.header("2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞")
    st.write("""
    ### –£—Å—Ç–∞–Ω–æ–≤–∫–∞

    ##### –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    
    –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Streamlit —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∫–æ–º–ø—å—é—Ç–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –í —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è:
    
    + Python: –≤–µ—Ä—Å–∏—è –æ—Ç 3.9 –¥–æ 3.13;
    + –ú–µ–Ω–µ–¥–∂–µ—Ä —Å—Ä–µ–¥—ã Python (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è);
    + –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–∫–µ—Ç–æ–≤ Python;
    + –†–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞.
    
    ##### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    
    1. –°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é —Å—Ä–µ–¥—É –≤ —Å–≤–æ–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:
    """)
    st.code("python -m venv myvenv")
    st.write("2. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ —Å—Ä–µ–¥—É —Å –ø–æ–º–æ—â—å—é –æ–¥–Ω–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–º–∞–Ω–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã:")
    txt = """
         myvenv\Scripts\activate  #Windows
         source myvenv/bin/activate  #Linux
         """
    st.code(txt)
    st.write("3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Streamlit –≤ —Å—Ä–µ–¥–µ:")
    st.code("pip install streamlit")
    st.write("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –∑–∞–ø—É—Å—Ç–∏–≤ –ø—Ä–∏–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Streamlit Hello:")
    st.code("streamlit hello")
    st.write("   –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª–∏–Ω–Ω—É—é —Ñ–æ—Ä–º—É –∫–æ–º–∞–Ω–¥—ã:")
    st.code("python -m streamlit hello")
    st.write("5. –ö–æ–≥–¥–∞ –≤—ã –∑–∞–∫–æ–Ω—á–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É —Å—Ä–µ–¥—É, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –æ–±—ã—á–Ω—É—é –æ–±–æ–ª–æ—á–∫—É, –≤–≤–µ–¥—è:")
    st.code("deactivate")
    st.write("")
    st.markdown("[–°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Streamlit](https://docs.streamlit.io/get-started/installation)")

# –†–∞–∑–¥–µ–ª 3: –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º (markdown, LaTeX)
elif choice == "–†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º":
    st.header("3. –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º (markdown, LaTeX)")
    st.write("**–ü—Ä–∏–º–µ—Ä Markdown:**")
    st.code("""
    st.markdown('''
    ### –ó–∞–≥–æ–ª–æ–≤–æ–∫
    - **–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç**
    - *–ö—É—Ä—Å–∏–≤*
    - [–°—Å—ã–ª–∫–∞](https://streamlit.io)
    ''')
    """, language="python")
    st.markdown('''
    ### –ó–∞–≥–æ–ª–æ–≤–æ–∫
    - **–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç**
    - *–ö—É—Ä—Å–∏–≤*
    - [–°—Å—ã–ª–∫–∞](https://streamlit.io)
    ''')

    st.write("**–ü—Ä–∏–º–µ—Ä LaTeX:**")
    st.code("""
    st.latex(r'E = mc^2')
    """, language="python")
    st.latex(r'E = mc^2')

# –†–∞–∑–¥–µ–ª 4: –¢–∞–±–ª–∏—Ü—ã
elif choice == "–¢–∞–±–ª–∏—Ü—ã":
    st.header("4. –¢–∞–±–ª–∏—Ü—ã")
    st.write("**–ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã:**")
    st.code("""
    data = pd.DataFrame({
        '–ö–æ–ª–æ–Ω–∫–∞ 1': [1, 2, 3, 4],
        '–ö–æ–ª–æ–Ω–∫–∞ 2': [10, 20, 30, 40]
    })
    st.table(data)  # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞
    st.dataframe(data)  # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
    """, language="python")
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    def generate_sample_data(rows=10):
        return pd.DataFrame({
            "ID": range(1, rows + 1),
            "Name": [f"Item {i}" for i in range(1, rows + 1)],
            "Category": np.random.choice(["A", "B", "C"], rows),
            "Price": np.random.randint(10, 500, rows),
            "Stock": np.random.randint(0, 100, rows)
        })

    st.title("üìä –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¢–∞–±–ª–∏—Ü–∞ –≤ Streamlit")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ session_state
    if "df" not in st.session_state:
        st.session_state.df = generate_sample_data(10)

    df = st.session_state.df.copy()

    st.subheader("–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–∞—è —Ç–∞–±–ª–∏—Ü–∞")
    edited_df = st.data_editor(df, num_rows="dynamic", key="table_editor")

    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    category_filter = st.selectbox("–§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", ["–í—Å–µ"] + sorted(df["Category"].unique().tolist()))
    if category_filter != "–í—Å–µ":
        edited_df = edited_df[edited_df["Category"] == category_filter]

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if st.button("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É"):
        new_row = {
            "ID": df["ID"].max() + 1 if not df.empty else 1,
            "Name": f"Item {df.shape[0] + 1}",
            "Category": np.random.choice(["A", "B", "C"]),
            "Price": np.random.randint(10, 500),
            "Stock": np.random.randint(0, 100)
        }
        st.session_state.df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)
        st.rerun()

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
    selected_rows = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ ID —Å—Ç—Ä–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", df["ID"].tolist())
    if st.button("üóë –£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ"):
        st.session_state.df = df[~df["ID"].isin(selected_rows)]
        st.rerun()

    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    st.subheader("üìà –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö")
    st.bar_chart(edited_df.set_index("Name")["Price"])

# –†–∞–∑–¥–µ–ª 5: –ù–∞—É—á–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞
elif choice == "–ù–∞—É—á–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞":
    st.header("5. –ù–∞—É—á–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞")
    st.write("**–ü—Ä–∏–º–µ—Ä –≥—Ä–∞—Ñ–∏–∫–∞ —Å Matplotlib:**")
    st.code("""
    x = np.linspace(0, 10, 100)
    y = np.sin(x)
    fig, ax = plt.subplots()
    ax.plot(x, y)
    ax.set_title('–ì—Ä–∞—Ñ–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ sin(x)')
    st.pyplot(fig)
    """, language="python")
    x = np.linspace(0, 10, 100)
    y = np.sin(x)
    fig, ax = plt.subplots()
    ax.plot(x, y)
    ax.set_title('–ì—Ä–∞—Ñ–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ sin(x)')
    st.pyplot(fig)

# –†–∞–∑–¥–µ–ª 6: –≠–ª–µ–º–µ–Ω—Ç—ã –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
elif choice == "–≠–ª–µ–º–µ–Ω—Ç—ã –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞":
    st.header("6. –≠–ª–µ–º–µ–Ω—Ç—ã –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    st.write("**–ü—Ä–∏–º–µ—Ä —Å–ª–∞–π–¥–µ—Ä–∞ –∏ —á–µ–∫–±–æ–∫—Å–∞:**")
    st.code("""
    slider_value = st.slider('–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ', 0, 100, 50)
    st.write(f'–í—ã –≤—ã–±—Ä–∞–ª–∏: {slider_value}')

    checkbox_value = st.checkbox('–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç')
    if checkbox_value:
        st.write('–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –≤–∏–¥–µ–Ω —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≥–∞–ª–æ—á–∫–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞.')
    """, language="python")
    slider_value = st.slider('–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ', 0, 100, 50)
    st.write(f'–í—ã –≤—ã–±—Ä–∞–ª–∏: {slider_value}')

    checkbox_value = st.checkbox('–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç')
    if checkbox_value:
        st.write('–≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –≤–∏–¥–µ–Ω —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≥–∞–ª–æ—á–∫–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞.')

# –†–∞–∑–¥–µ–ª 7: –°–æ—Å—Ç–∞–≤–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏
elif choice == "–°–æ—Å—Ç–∞–≤–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏":
    st.header("7. –°–æ—Å—Ç–∞–≤–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏")
    st.write("**–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫:**")
    st.code("""
    tab1, tab2 = st.tabs(["–í–∫–ª–∞–¥–∫–∞ 1", "–í–∫–ª–∞–¥–∫–∞ 2"])
    with tab1:
        st.write("–ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ 1")
    with tab2:
        st.write("–ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ 2")
    """, language="python")
    tab1, tab2 = st.tabs(["–í–∫–ª–∞–¥–∫–∞ 1", "–í–∫–ª–∞–¥–∫–∞ 2"])
    with tab1:
        st.write("–ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ 1")
    with tab2:
        st.write("–ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ 2")

# –†–∞–∑–¥–µ–ª 8: –†–∞—Å—á–µ—Ç–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–º –≤–≤–æ–¥–æ–º
elif choice == "–†–∞—Å—á–µ—Ç–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–º –≤–≤–æ–¥–æ–º":
    st.header("8. –†–∞—Å—á–µ—Ç–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–º –≤–≤–æ–¥–æ–º")
    st.write("**–ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞ –ø–ª–æ—â–∞–¥–∏ –∫—Ä—É–≥–∞:**")
    st.code("""
    radius = st.number_input('–í–≤–µ–¥–∏—Ç–µ —Ä–∞–¥–∏—É—Å –∫—Ä—É–≥–∞', min_value=0.0, value=1.0)
    area = np.pi * radius ** 2
    st.write(f'–ü–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞ —Å —Ä–∞–¥–∏—É—Å–æ–º {radius} —Ä–∞–≤–Ω–∞ {area:.2f}')
    """, language="python")
    radius = st.number_input('–í–≤–µ–¥–∏—Ç–µ —Ä–∞–¥–∏—É—Å –∫—Ä—É–≥–∞', min_value=0.0, value=1.0)
    area = np.pi * radius ** 2
    st.write(f'–ü–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞ —Å —Ä–∞–¥–∏—É—Å–æ–º {radius} —Ä–∞–≤–Ω–∞ {area:.2f}')

# –†–∞–∑–¥–µ–ª 9: –ö–æ–º–ø–æ–Ω–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
elif choice == "–ö–æ–º–ø–æ–Ω–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã":
    st.header("9. –ö–æ–º–ø–æ–Ω–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    st.write("**–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫:**")
    st.code("""
    col1, col2 = st.columns(2)
    with col1:
        st.write('–≠—Ç–æ –ª–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞')
        st.button('–ö–Ω–æ–ø–∫–∞ 1')
    with col2:
        st.write('–≠—Ç–æ –ø—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞')
        st.button('–ö–Ω–æ–ø–∫–∞ 2')
    """, language="python")
    col1, col2 = st.columns(2)
    with col1:
        st.write('–≠—Ç–æ –ª–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞')
        st.button('–ö–Ω–æ–ø–∫–∞ 1')
    with col2:
        st.write('–≠—Ç–æ –ø—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞')
        st.button('–ö–Ω–æ–ø–∫–∞ 2')

# –†–∞–∑–¥–µ–ª 10: –ú–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
elif choice == "–ú–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç":
    st.header("10. –ú–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç")
    st.write("""
    Streamlit –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–≥–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É `pages` –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç—É–¥–∞ —Ñ–∞–π–ª—ã `.py`.
    """)
    st.code("""
    your_app/
    ‚îú‚îÄ‚îÄ main.py
    ‚îî‚îÄ‚îÄ pages/
        ‚îú‚îÄ‚îÄ page1.py
        ‚îî‚îÄ‚îÄ page2.py
    """, language="plaintext")
    st.write("**–ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:**")
    st.write("- `main.py`: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.")
    st.write("- `pages/page1.py`: –ü–µ—Ä–≤–∞—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.")
    st.write("- `pages/page2.py`: –í—Ç–æ—Ä–∞—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.")
